import { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";
import Header from "@/components/Header";
import { roomService, MongoRoom } from "@/lib/mongodb";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import {
  ArrowLeft,
  Search,
  MapPin,
  Users,
  Wifi,
  Monitor,
  Projector,
  Coffee,
} from "lucide-react";

const RoomSearch = () => {
  const [allRooms, setAllRooms] = useState<MongoRoom[]>([]);
  const [filteredRooms, setFilteredRooms] = useState<MongoRoom[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [searchFilters, setSearchFilters] = useState({
    name: "",
    building: "all",
    capacity: "all",
  });

  // Load rooms from MongoDB on component mount
  useEffect(() => {
    const loadRooms = async () => {
      try {
        console.log("üìö Loading rooms from database...");
        setIsLoading(true);
        const rooms = await roomService.getAllRooms();
        setAllRooms(rooms);
        setFilteredRooms(rooms);
        console.log("‚úÖ Loaded", rooms.length, "rooms from database");
      } catch (error) {
        console.error("‚ùå Error loading rooms:", error);
      } finally {
        setIsLoading(false);
      }
    };

    loadRooms();
  }, []);

  const handleSearch = () => {
    let filtered = allRooms;

    if (searchFilters.name) {
      filtered = filtered.filter((room) =>
        room.name.toLowerCase().includes(searchFilters.name.toLowerCase()),
      );
    }

    if (searchFilters.building && searchFilters.building !== "all") {
      filtered = filtered.filter(
        (room) => room.building === searchFilters.building,
      );
    }

    if (searchFilters.capacity && searchFilters.capacity !== "all") {
      const capacity = parseInt(searchFilters.capacity);
      filtered = filtered.filter((room) => {
        if (searchFilters.capacity === "small") return room.capacity <= 30;
        if (searchFilters.capacity === "medium")
          return room.capacity > 30 && room.capacity <= 60;
        if (searchFilters.capacity === "large") return room.capacity > 60;
        return true;
      });
    }

    setFilteredRooms(filtered);
  };

  const handleFilterChange = (field: string, value: string) => {
    setSearchFilters((prev) => ({ ...prev, [field]: value }));
  };

  const getStatusBadge = (status: string) => {
    switch (status) {
      case "available":
        return <Badge className="bg-green-100 text-green-800">C√≥ s·∫µn</Badge>;
      case "booked":
        return <Badge className="bg-red-100 text-red-800">ƒê√£ ƒë·∫∑t</Badge>;
      case "maintenance":
        return <Badge className="bg-yellow-100 text-yellow-800">B·∫£o tr√¨</Badge>;
      default:
        return <Badge className="bg-gray-100 text-gray-800">Kh√¥ng r√µ</Badge>;
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Back Navigation */}
        <div className="mb-6">
          <Link
            to="/"
            className="flex items-center text-gray-600 hover:text-gray-900 transition-colors"
          >
            <ArrowLeft className="h-4 w-4 mr-2" />
            Quay l·∫°i trang ch·ªß
          </Link>
        </div>

        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            Danh s√°ch ph√≤ng
          </h1>
          <p className="text-gray-600">
            T√¨m ki·∫øm v√† ƒë·∫∑t ph√≤ng ph√π h·ª£p v·ªõi nhu c·∫ßu c·ªßa b·∫°n
          </p>
        </div>

        {/* Search Filters */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="flex items-center">
              <Search className="h-5 w-5 mr-2" />
              T√¨m ki·∫øm ph√≤ng
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  T√™n ph√≤ng
                </label>
                <Input
                  placeholder="Nh·∫≠p t√™n ph√≤ng..."
                  value={searchFilters.name}
                  onChange={(e) => handleFilterChange("name", e.target.value)}
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  T√≤a nh√†
                </label>
                <Select
                  value={searchFilters.building}
                  onValueChange={(value) =>
                    handleFilterChange("building", value)
                  }
                >
                  <SelectTrigger>
                    <SelectValue placeholder="Ch·ªçn t√≤a nh√†" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="all">T·∫•t c·∫£</SelectItem>
                    <SelectItem value="CS1">T√≤a CS1</SelectItem>
                    <SelectItem value="CS2">T√≤a CS2</SelectItem>
                    <SelectItem value="CS3">T√≤a CS3</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  S·ª©c ch·ª©a
                </label>
                <Select
                  value={searchFilters.capacity}
                  onValueChange={(value) =>
                    handleFilterChange("capacity", value)
                  }
                >
                  <SelectTrigger>
                    <SelectValue placeholder="S·ªë ng∆∞·ªùi" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="all">T·∫•t c·∫£</SelectItem>
                    <SelectItem value="small">10-30 ng∆∞·ªùi</SelectItem>
                    <SelectItem value="medium">30-60 ng∆∞·ªùi</SelectItem>
                    <SelectItem value="large">60+ ng∆∞·ªùi</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <div className="flex items-end">
                <Button
                  onClick={handleSearch}
                  className="w-full bg-cmcBlue-600 hover:bg-cmcBlue-700"
                >
                  T√¨m ki·∫øm
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Room Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {isLoading ? (
            // Loading skeleton
            Array.from({ length: 6 }).map((_, index) => (
              <Card key={index} className="overflow-hidden">
                <div className="aspect-video bg-gray-200 animate-pulse"></div>
                <CardHeader>
                  <div className="h-6 bg-gray-200 rounded animate-pulse mb-2"></div>
                  <div className="h-4 bg-gray-200 rounded animate-pulse w-2/3"></div>
                </CardHeader>
                <CardContent>
                  <div className="h-4 bg-gray-200 rounded animate-pulse mb-2"></div>
                  <div className="h-4 bg-gray-200 rounded animate-pulse w-3/4"></div>
                </CardContent>
              </Card>
            ))
          ) : filteredRooms.length === 0 ? (
            <div className="col-span-full text-center py-12">
              <div className="text-gray-500">
                <Building2 className="h-12 w-12 mx-auto mb-4 text-gray-300" />
                <h3 className="text-lg font-medium mb-2">
                  Kh√¥ng t√¨m th·∫•y ph√≤ng
                </h3>
                <p>Th·ª≠ ƒëi·ªÅu ch·ªânh ti√™u ch√≠ t√¨m ki·∫øm ƒë·ªÉ xem th√™m k·∫øt qu·∫£</p>
              </div>
            </div>
          ) : (
            filteredRooms.map((room) => (
              <Card
                key={room.id}
                className="overflow-hidden hover:shadow-lg transition-shadow cursor-pointer"
              >
                <Link to={`/rooms/${room.id}`} state={{ room }}>
                  <div className="aspect-video bg-gray-200 relative">
                    <div className="absolute top-4 left-4">
                      {getStatusBadge(room.status)}
                    </div>
                    <div className="absolute inset-0 flex items-center justify-center">
                      <div className="text-gray-400">üì∑ H√¨nh ·∫£nh ph√≤ng</div>
                    </div>
                  </div>
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <CardTitle className="text-xl">{room.name}</CardTitle>
                      <Badge variant="outline">{room.capacity} ng∆∞·ªùi</Badge>
                    </div>
                    <CardDescription className="flex items-center text-gray-600">
                      <MapPin className="h-4 w-4 mr-1" />
                      {room.floor}, T√≤a {room.building}
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="flex flex-wrap gap-2 mb-4">
                      {room.equipment.map((item, index) => (
                        <Badge
                          key={index}
                          variant="secondary"
                          className="text-xs"
                        >
                          {item === "M√°y chi·∫øu" && (
                            <Monitor className="h-3 w-3 mr-1" />
                          )}
                          {item === "Wifi" && <Wifi className="h-3 w-3 mr-1" />}
                          {item === "ƒêi·ªÅu h√≤a" && (
                            <Coffee className="h-3 w-3 mr-1" />
                          )}
                          {item}
                        </Badge>
                      ))}
                    </div>
                    <p className="text-sm text-gray-600">{room.description}</p>
                  </CardContent>
                </Link>
              </Card>
            ))
          )}

          {/* Room 202 */}
          <Card className="overflow-hidden hover:shadow-lg transition-shadow cursor-pointer">
            <Link to="/rooms/202">
              <div className="aspect-video bg-gray-200 relative">
                <div className="absolute top-4 left-4">
                  <Badge className="bg-red-100 text-red-800">ƒê√£ ƒë·∫∑t</Badge>
                </div>
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="text-gray-400">üì∑ H√¨nh ·∫£nh ph√≤ng</div>
                </div>
              </div>
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="text-xl">Ph√≤ng 202</CardTitle>
                  <Badge variant="outline">30 ng∆∞·ªùi</Badge>
                </div>
                <CardDescription className="flex items-center text-gray-600">
                  <MapPin className="h-4 w-4 mr-1" />
                  T·∫ßng 2, T√≤a CS1
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex flex-wrap gap-2 mb-4">
                  <Badge variant="secondary" className="text-xs">
                    <Monitor className="h-3 w-3 mr-1" />
                    M√°y chi·∫øu
                  </Badge>
                  <Badge variant="secondary" className="text-xs">
                    <Wifi className="h-3 w-3 mr-1" />
                    Wifi
                  </Badge>
                </div>
                <p className="text-sm text-gray-600">
                  Ph√≤ng h·ªçp nh·ªè th√≠ch h·ª£p cho c√°c bu·ªïi th·∫£o lu·∫≠n nh√≥m v√†
                  seminar.
                </p>
              </CardContent>
            </Link>
          </Card>

          {/* Room 301 */}
          <Card className="overflow-hidden hover:shadow-lg transition-shadow cursor-pointer">
            <Link to="/rooms/301">
              <div className="aspect-video bg-gray-200 relative">
                <div className="absolute top-4 left-4">
                  <Badge className="bg-green-100 text-green-800">C√≥ s·∫µn</Badge>
                </div>
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="text-gray-400">üì∑ H√¨nh ·∫£nh ph√≤ng</div>
                </div>
              </div>
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="text-xl">Ph√≤ng 301</CardTitle>
                  <Badge variant="outline">80 ng∆∞·ªùi</Badge>
                </div>
                <CardDescription className="flex items-center text-gray-600">
                  <MapPin className="h-4 w-4 mr-1" />
                  T·∫ßng 3, T√≤a CS2
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex flex-wrap gap-2 mb-4">
                  <Badge variant="secondary" className="text-xs">
                    <Monitor className="h-3 w-3 mr-1" />
                    M√°y chi·∫øu
                  </Badge>
                  <Badge variant="secondary" className="text-xs">
                    <Projector className="h-3 w-3 mr-1" />
                    B·∫£ng tr·∫Øng
                  </Badge>
                  <Badge variant="secondary" className="text-xs">
                    <Wifi className="h-3 w-3 mr-1" />
                    Wifi
                  </Badge>
                </div>
                <p className="text-sm text-gray-600">
                  H·ªôi tr∆∞·ªùng l·ªõn ph√π h·ª£p cho c√°c s·ª± ki·ªán, h·ªôi th·∫£o v√† bu·ªïi
                  thuy·∫øt tr√¨nh.
                </p>
              </CardContent>
            </Link>
          </Card>

          {/* Additional rooms */}
          <Card className="overflow-hidden hover:shadow-lg transition-shadow cursor-pointer">
            <Link to="/rooms/302">
              <div className="aspect-video bg-gray-200 relative">
                <div className="absolute top-4 left-4">
                  <Badge className="bg-green-100 text-green-800">C√≥ s·∫µn</Badge>
                </div>
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="text-gray-400">üì∑ H√¨nh ·∫£nh ph√≤ng</div>
                </div>
              </div>
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="text-xl">Ph√≤ng 302</CardTitle>
                  <Badge variant="outline">25 ng∆∞·ªùi</Badge>
                </div>
                <CardDescription className="flex items-center text-gray-600">
                  <MapPin className="h-4 w-4 mr-1" />
                  T·∫ßng 3, T√≤a CS2
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex flex-wrap gap-2 mb-4">
                  <Badge variant="secondary" className="text-xs">
                    <Monitor className="h-3 w-3 mr-1" />
                    M√°y chi·∫øu
                  </Badge>
                  <Badge variant="secondary" className="text-xs">
                    <Wifi className="h-3 w-3 mr-1" />
                    Wifi
                  </Badge>
                </div>
                <p className="text-sm text-gray-600">
                  Ph√≤ng lab m√°y t√≠nh v·ªõi trang thi·∫øt b·ªã hi·ªán ƒë·∫°i cho th·ª±c h√†nh
                  l·∫≠p tr√¨nh.
                </p>
              </CardContent>
            </Link>
          </Card>

          <Card className="overflow-hidden hover:shadow-lg transition-shadow cursor-pointer">
            <Link to="/rooms/401">
              <div className="aspect-video bg-gray-200 relative">
                <div className="absolute top-4 left-4">
                  <Badge className="bg-yellow-100 text-yellow-800">
                    B·∫£o tr√¨
                  </Badge>
                </div>
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="text-gray-400">üì∑ H√¨nh ·∫£nh ph√≤ng</div>
                </div>
              </div>
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="text-xl">Ph√≤ng 401</CardTitle>
                  <Badge variant="outline">40 ng∆∞·ªùi</Badge>
                </div>
                <CardDescription className="flex items-center text-gray-600">
                  <MapPin className="h-4 w-4 mr-1" />
                  T·∫ßng 4, T√≤a CS3
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex flex-wrap gap-2 mb-4">
                  <Badge variant="secondary" className="text-xs">
                    <Monitor className="h-3 w-3 mr-1" />
                    M√°y chi·∫øu
                  </Badge>
                  <Badge variant="secondary" className="text-xs">
                    <Wifi className="h-3 w-3 mr-1" />
                    Wifi
                  </Badge>
                </div>
                <p className="text-sm text-gray-600">
                  Ph√≤ng ƒëa nƒÉng th√≠ch h·ª£p cho c√°c ho·∫°t ƒë·ªông h·ªçc t·∫≠p v√† s·ª± ki·ªán
                  sinh vi√™n.
                </p>
              </CardContent>
            </Link>
          </Card>

          <Card className="overflow-hidden hover:shadow-lg transition-shadow cursor-pointer">
            <Link to="/rooms/402">
              <div className="aspect-video bg-gray-200 relative">
                <div className="absolute top-4 left-4">
                  <Badge className="bg-green-100 text-green-800">C√≥ s·∫µn</Badge>
                </div>
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="text-gray-400">üì∑ H√¨nh ·∫£nh ph√≤ng</div>
                </div>
              </div>
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="text-xl">Ph√≤ng 402</CardTitle>
                  <Badge variant="outline">60 ng∆∞·ªùi</Badge>
                </div>
                <CardDescription className="flex items-center text-gray-600">
                  <MapPin className="h-4 w-4 mr-1" />
                  T·∫ßng 4, T√≤a CS3
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex flex-wrap gap-2 mb-4">
                  <Badge variant="secondary" className="text-xs">
                    <Monitor className="h-3 w-3 mr-1" />
                    M√°y chi·∫øu
                  </Badge>
                  <Badge variant="secondary" className="text-xs">
                    <Coffee className="h-3 w-3 mr-1" />
                    ƒêi·ªÅu h√≤a
                  </Badge>
                  <Badge variant="secondary" className="text-xs">
                    <Wifi className="h-3 w-3 mr-1" />
                    Wifi
                  </Badge>
                </div>
                <p className="text-sm text-gray-600">
                  Ph√≤ng h·ªçc l·ªõn v·ªõi √¢m thanh √°nh s√°ng t·ªët, ph√π h·ª£p cho c√°c b√†i
                  gi·∫£ng.
                </p>
              </CardContent>
            </Link>
          </Card>
        </div>
      </div>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-16 mt-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div>
              <div className="flex items-center space-x-2 mb-4">
                <img
                  src="https://cdn.builder.io/api/v1/assets/60e774fd1c3a405983c80f4cf952afe6/chatgpt_image_jun_17__2025__03_55_26_pm-removebg-preview-a4ecb1?format=webp&width=800"
                  alt="CMC Room Booking"
                  className="h-8 w-8"
                />
                <div>
                  <div className="font-bold text-white">CMC Room Booking</div>
                  <div className="text-xs text-gray-400">
                    Tr∆∞·ªùng ƒê·∫°i h·ªçc CMC
                  </div>
                </div>
              </div>
              <p className="text-gray-400 text-sm">
                H·ªá th·ªëng ƒë·∫∑t ph√≤ng tr·ª±c tuy·∫øn hi·ªán ƒë·∫°i, ti·ªán l·ª£i v√† nhanh ch√≥ng
                d√†nh cho sinh vi√™n Tr∆∞·ªùng ƒê·∫°i h·ªçc CMC.
              </p>
            </div>

            <div>
              <h3 className="font-semibold mb-4">Li√™n k·∫øt nhanh</h3>
              <ul className="space-y-2 text-gray-400 text-sm">
                <li>
                  <Link to="/" className="hover:text-white transition-colors">
                    Trang ch·ªß
                  </Link>
                </li>
                <li>
                  <Link
                    to="/rooms"
                    className="hover:text-white transition-colors"
                  >
                    Danh s√°ch ph√≤ng
                  </Link>
                </li>
                <li>
                  <Link to="#" className="hover:text-white transition-colors">
                    Gi·ªõi thi·ªáu
                  </Link>
                </li>
                <li>
                  <Link to="#" className="hover:text-white transition-colors">
                    Li√™n h·ªá
                  </Link>
                </li>
              </ul>
            </div>

            <div>
              <h3 className="font-semibold mb-4">H·ªó tr·ª£</h3>
              <ul className="space-y-2 text-gray-400 text-sm">
                <li>
                  <Link to="#" className="hover:text-white transition-colors">
                    Trung t√¢m tr·ª£ gi√∫p
                  </Link>
                </li>
                <li>
                  <Link to="#" className="hover:text-white transition-colors">
                    Li√™n hÔøΩÔøΩÔøΩ CTSY
                  </Link>
                </li>
                <li>
                  <Link to="#" className="hover:text-white transition-colors">
                    Quy ƒë·ªãnh s·ª≠ d·ª•ng
                  </Link>
                </li>
                <li>
                  <Link to="#" className="hover:text-white transition-colors">
                    Ch√≠nh s√°ch b·∫£o m·∫≠t
                  </Link>
                </li>
              </ul>
            </div>

            <div>
              <h3 className="font-semibold mb-4">Li√™n h·ªá</h3>
              <ul className="space-y-2 text-gray-400 text-sm">
                <li>üìç S·ªë 236 Ho√†ng Qu·ªëc Vi·ªát, C·ªï Nhu·∫ø, B·∫Øc T·ª´ Li√™m, H√† N·ªôi</li>
                <li>üìû 024 3755 6666</li>
                <li>‚úâÔ∏è support@cmc.edu.vn</li>
              </ul>
            </div>
          </div>

          <div className="border-t border-gray-800 mt-12 pt-8 text-center">
            <p className="text-gray-400 text-sm">
              ¬© 2024 Tr∆∞·ªùng ƒê·∫°i h·ªçc CMC. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default RoomSearch;
